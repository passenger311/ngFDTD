cmake_minimum_required(VERSION 2.8)

include_directories(${LUA_INCLUDE_DIR})

set(LD_LIBS m)

if ( UNIX )
  set(LD_LIBS ${LD_LIBS} dl readline)
  set(C_FLAGS "${C_FLAGS} -DLUA_USE_LINUX" )
else()
  set(C_FLAGS "${C_FLAGS}" )
endif()

set(DEV_HDRS
  luasocket.h
)

set(SOCKET_SRCS 
  luasocket.c
  timeout.c 
  buffer.c 
  io.c 
  auxiliar.c 
  options.c 
  inet.c 
  tcp.c 
  udp.c  
  except.c 
  select.c 
  usocket.c 
)

set(MIME_SRCS 
  mime.c
)

set(UNIX_SRCS
  buffer.c
  auxiliar.c
  options.c
  timeout.c
  io.c
  usocket.c
  unix.c
)


add_library(socket-dll SHARED ${SOCKET_SRCS})
add_library(mime-dll SHARED ${MIME_SRCS})
add_library(unix-dll SHARED ${UNIX_SRCS})

target_link_libraries(socket-dll mime-dll unix-dll ${LD_LIBS})

set_target_properties(socket-dll
  PROPERTIES 
  LIBRARY_OUTPUT_DIRECTORY socket
  ARCHIVE_OUTPUT_DIRECTORY socket
  RUNTIME_OUTPUT_DIRECTORY socket
  OUTPUT_NAME core
  PREFIX ""
  COMPILE_FLAGS ${C_FLAGS}
)

set_target_properties(mime-dll
  PROPERTIES 
  LIBRARY_OUTPUT_DIRECTORY mime
  ARCHIVE_OUTPUT_DIRECTORY mime
  RUNTIME_OUTPUT_DIRECTORY mime
  OUTPUT_NAME core
  PREFIX ""
  COMPILE_FLAGS ${C_FLAGS}
)

set_target_properties(unix-dll
  PROPERTIES 
  OUTPUT_NAME unix
  PREFIX ""
  COMPILE_FLAGS ${C_FLAGS}
)

install(TARGETS 
  socket-dll
  unix-dll
  RUNTIME DESTINATION ${INSTALL_DIR_BINARY}/socket
  LIBRARY DESTINATION ${INSTALL_DIR_LIBRARY}/socket
  ARCHIVE DESTINATION ${INSTALL_DIR_LIBRARY}/socket
)

install(TARGETS 
  mime-dll
  RUNTIME DESTINATION ${INSTALL_DIR_BINARY}/mime
  LIBRARY DESTINATION ${INSTALL_DIR_LIBRARY}/mime
  ARCHIVE DESTINATION ${INSTALL_DIR_LIBRARY}/mime
)

set(SOCKET_LUA
  http.lua 
  url.lua 
  tp.lua 
  ftp.lua 
  smtp.lua
)

set(OTHER_LUA
  ltn12.lua
  socket.lua
  mime.lua
)

install(FILES ${SOCKET_LUA} DESTINATION ${INSTALL_DIR_SHARE}/socket)
install(FILES ${OTHER_LUA} DESTINATION ${INSTALL_DIR_SHARE})
install(FILES ${DEV_HDRS} DESTINATION ${INSTALL_DIR_INCLUDE})
