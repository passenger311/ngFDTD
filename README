
_______________________________________________________________________________
__ CONFIGURATION ______________________________________________________________

1. setup project components 

   Add/customize extra components. This involves creating/modifying 
   "control.cmake", "find.cmake" and "patch/". Add components to "source/" 
   by modifying the hierarchy of "CMakeLists.txt" files.

2. edit files in "setup/" to customize build process
   
   set project name, version number in "project.cmake". Define compiler flags 
   in "compiler.cmake", install locations in "install.cmake", packaging in 
   "package.cmake", and third party package search locations in "search.cmake". 

3. edit "config.h.in"

   to customize the C/C++ project header.

_______________________________________________________________________________
__ PROJECT TREE _______________________________________________________________

The build tree is constructed from components using the require(<component>) 
function which ties components on-demand into the build process. 

In the component directory, the "CONTROL.cmake" file is is processed if present.
If not the directory (containing a "CMakeLists.txt") file is directly added to 
the cmake build process. In "CONTROL.cmake": if BUILD is not "on" the 
"FIND.cmake" script is used to search system for package component. If BUILD 
is "on" and a TARBALL specified, then the tarball will be unpacked, the content
of "PATCH/" (if present) copied into the unpacked source directory and the 
directory added to the cmake build.

_______________________________________________________________________________
__ BUILD PROCESS ______________________________________________________________

Create a "build" directory and enter it

> mkdir build
> cd build

Then run

> cmake .. [<options>]       

to configure the build. Consider the following options

-DPREFIX=<install-prefix> 
-DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain/<file>

to specify the installation directory and the toolchain file. Use

> make [VERBOSE=1]

to build project. 

_______________________________________________________________________________
__ INSTALLATION _______________________________________________________________

Install location can be customized by editing "setup/install.cmake". To install
libraries, headers and runtime componenent type 
 
> make install  

from within the "build/" directory. Default install directory is "install/" 
within the current "build/" directory.

_______________________________________________________________________________
__ CLEANUP ____________________________________________________________________

To cleanup the build run

> make clean

from within "build/" directory or

> make distclean

to wipe the content of the "build/" directory

_______________________________________________________________________________
__ PACKAGING __________________________________________________________________

Run

> cpack 

from within the "build/" directory to generate standard package types or  

> cpack -G <generator>

where <generator> specifies a generator. Choices are:
 
TGZ (gzipped compressed tar)
STGZ (self-extracting gzip compressed tar)
TBZ2 (bzip2 compressed tar)
TZ (tar unix compressed)
ZIP 

or 

NSIS (nullsoft installer)

_______________________________________________________________________________
J Hamm (3/8/2012)